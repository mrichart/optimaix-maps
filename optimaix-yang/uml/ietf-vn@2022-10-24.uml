'Download plantuml from http://plantuml.sourceforge.net/ 
'Generate png with java -jar plantuml.jar <file> 
'Output in img/<module>.png 
'If Java spits out memory error increase heap size with java -Xmx1024m  -jar plantuml.jar <file> 
@startuml img/ietf-vn.png 
hide empty fields 
hide empty methods 
hide <<case>> circle
hide <<augment>> circle
hide <<choice>> circle
hide <<leafref>> stereotype
hide <<leafref>> circle
page 1x1 
Title ietf-vn 
package "yang:ietf-yang-types" as yang_ietf_yang_types { 
} 
package "nw:ietf-network" as nw_ietf_network { 
} 
package "nt:ietf-network-topology" as nt_ietf_network_topology { 
} 
package "te-types:ietf-te-types" as te_types_ietf_te_types { 
} 
package "tet:ietf-te-topology" as tet_ietf_te_topology { 
} 
note top of vn_ietf_vn : <b>Namespace: </b> urn:ietf:params:xml:ns:yang:ietf-vn \n<b>Prefix: </b> vn \n<b>Organization : </b>\nIETF Traffic Engineering Architecture and Signaling (TEAS) \nWorking Group \n<b>Contact : </b>\nWG Web:  <https://datatracker.ietf.org/wg/teas/> \nWG List:  <mailto:teas@ietf.org> \nEditor: Young Lee <younglee.tx@gmail.com> \n      : Dhruv Dhody <dhruv.ietf@gmail.com> \n<b>Revision : </b> 2022-10-24 \n
package "vn:ietf-vn" as vn_ietf_vn { 
yang_ietf_yang_types +-- vn_ietf_vn
nw_ietf_network +-- vn_ietf_vn
nt_ietf_network_topology +-- vn_ietf_vn
te_types_ietf_te_types +-- vn_ietf_vn
tet_ietf_te_topology +-- vn_ietf_vn
class "ietf-vn" as ietf_vn << (M, #33CCFF) module>> 
ietf_vn : feature : multi_src_dest 
class "vn-id" as vn_id << (T, YellowGreen) typedef>>
vn_id : string
class "ap-id" as ap_id << (T, YellowGreen) typedef>>
ap_id : string
class "vnm-id" as vnm_id << (T, YellowGreen) typedef>>
vnm_id : string
class "vn-compute-status" as vn_compute_status << (T, YellowGreen) typedef>>
vn_compute_status : te-types:te-common-status
class "vn-ap" as ietf_vn_I_vn_ap_grouping <<(G,Lime) grouping>> 
ietf_vn_I_vn_ap_grouping : vn-ap-id : ap-id  
ietf_vn_I_vn_ap_grouping : vn : leafref : /virtual-network/vn/vn-id  
ietf_vn_I_vn_ap_grouping : abstract-node : leafref : /nw:networks/nw:network/nw:node/tet:te-node-id  
ietf_vn_I_vn_ap_grouping : ltp : leafref : /nw:networks/nw:network/nw:node/nt:termination-point/tet:te-tp-id  
ietf_vn_I_vn_ap_grouping : max-bandwidth : te-types:te-bandwidth   {Config : false}
class "access-point" as ietf_vn_I_access_point_grouping <<(G,Lime) grouping>> 
ietf_vn_I_access_point_grouping : ap-id : ap-id  
ietf_vn_I_access_point_grouping : pe : leafref : /nw:networks/nw:network/nw:node/tet:te-node-id  
ietf_vn_I_access_point_grouping : max-bandwidth : te-types:te-bandwidth  
ietf_vn_I_access_point_grouping : avl-bandwidth : te-types:te-bandwidth  
class "vn-ap" as ietf_vn_I_access_point_I_vn_ap << (L, #FF7700) list>> 
ietf_vn_I_access_point_grouping *-- "0..N" ietf_vn_I_access_point_I_vn_ap 
ietf_vn_I_access_point_I_vn_ap : vn-ap {uses} 
class "vn-member" as ietf_vn_I_vn_member_grouping <<(G,Lime) grouping>> 
ietf_vn_I_vn_member_grouping : vnm-id : vnm-id  
class "src" as  ietf_vn_I_vn_member_I_src <<container>> 
ietf_vn_I_vn_member_grouping *-- "1" ietf_vn_I_vn_member_I_src 
ietf_vn_I_vn_member_I_src : src : leafref : /access-point/ap/ap-id  
ietf_vn_I_vn_member_I_src : src-vn-ap-id : leafref : /access-point/ap/vn-ap/vn-ap-id  
ietf_vn_I_vn_member_I_src : multi-src : boolean   = false  {if-feature : multi-src-dest}
class "dest" as  ietf_vn_I_vn_member_I_dest <<container>> 
ietf_vn_I_vn_member_grouping *-- "1" ietf_vn_I_vn_member_I_dest 
ietf_vn_I_vn_member_I_dest : dest : leafref : /access-point/ap/ap-id  
ietf_vn_I_vn_member_I_dest : dest-vn-ap-id : leafref : /access-point/ap/vn-ap/vn-ap-id  
ietf_vn_I_vn_member_I_dest : multi-dest : boolean   = false  {if-feature : multi-src-dest}
ietf_vn_I_vn_member_grouping : connectivity-matrix-id : leafref : /nw:networks/nw:network/nw:node/tet:te/tet:te-node-attributes/tet:connectivity-matrices/tet:connectivity-matrix/tet:id  
class "underlay" as  ietf_vn_I_vn_member_I_underlay <<container>> 
ietf_vn_I_vn_member_grouping *-- "1" ietf_vn_I_vn_member_I_underlay 
class "vn-policy" as ietf_vn_I_vn_policy_grouping <<(G,Lime) grouping>> 
ietf_vn_I_vn_policy_grouping : vn-level-diversity : te-types:te-path-disjointness  
class "access-point" as  ietf_vn_I_access_point <<container>> 
ietf_vn *-- "1" ietf_vn_I_access_point 
class "ap" as ietf_vn_I_access_point_I_ap << (L, #FF7700) list>> 
ietf_vn_I_access_point *-- "0..N" ietf_vn_I_access_point_I_ap 
ietf_vn_I_access_point_I_ap : access-point {uses} 
class "virtual-network" as  ietf_vn_I_virtual_network <<container>> 
ietf_vn *-- "1" ietf_vn_I_virtual_network 
class "vn" as ietf_vn_I_virtual_network_I_vn << (L, #FF7700) list>> 
ietf_vn_I_virtual_network *-- "0..N" ietf_vn_I_virtual_network_I_vn 
ietf_vn_I_virtual_network_I_vn : +vn-id : vn-id  {key} 
ietf_vn_I_virtual_network_I_vn : te-types:te-topology-identifier {uses} 
ietf_vn_I_virtual_network_I_vn : abstract-node : leafref : /nw:networks/nw:network/nw:node/tet:te-node-id  
class "vn-member" as ietf_vn_I_virtual_network_I_vn_I_vn_member << (L, #FF7700) list>> 
ietf_vn_I_virtual_network_I_vn *-- "0..N" ietf_vn_I_virtual_network_I_vn_I_vn_member 
ietf_vn_I_virtual_network_I_vn_I_vn_member : vn-member {uses} 
ietf_vn_I_virtual_network_I_vn_I_vn_member : oper-status : te-types:te-oper-status   {Config : false}
ietf_vn_I_virtual_network_I_vn_I_vn_member : if-selected : boolean   = false  {Config : false} {if-feature : multi-src-dest}
ietf_vn_I_virtual_network_I_vn : admin-status : te-types:te-admin-status   = up 
ietf_vn_I_virtual_network_I_vn : oper-status : te-types:te-oper-status   {Config : false}
ietf_vn_I_virtual_network_I_vn : vn-policy {uses} 
ietf_vn : vn-compute( in: abstract_node in: cos in: vn_member_list in: te_types_te_topology_identifier in: te_types_generic_path_constraints in: te_types_generic_path_optimization in: vn_policy out: abstract_node out: vn_member_list out: te_types_te_topology_identifier)
class "vn-computation-error-reason" as vn_computation_error_reason << (I,Silver) identity>> 
class "vn-computation-error-not-ready" as vn_computation_error_not_ready << (I,Silver) identity>> 
vn_computation_error_reason <|-- vn_computation_error_not_ready 
class "vn-computation-error-no-cnc" as vn_computation_error_no_cnc << (I,Silver) identity>> 
vn_computation_error_reason <|-- vn_computation_error_no_cnc 
class "vn-computation-error-no-resource" as vn_computation_error_no_resource << (I,Silver) identity>> 
vn_computation_error_reason <|-- vn_computation_error_no_resource 
class "vn-computation-error-path-not-found" as vn_computation_error_path_not_found << (I,Silver) identity>> 
vn_computation_error_reason <|-- vn_computation_error_path_not_found 
class "vn-computation-ap-unknown" as vn_computation_ap_unknown << (I,Silver) identity>> 
vn_computation_error_reason <|-- vn_computation_ap_unknown 
class "/nw:networks/nw:network/nw:node" as ietf_network_I_networks_I_network_I_node <<leafref>> 
} 

ietf_vn_I_access_point_I_vn_ap --> ietf_vn_I_vn_ap_grouping : uses 
ietf_vn_I_access_point_I_ap --> ietf_vn_I_access_point_grouping : uses 
ietf_vn_I_virtual_network_I_vn_I_vn_member --> ietf_vn_I_vn_member_grouping : uses 
ietf_vn_I_virtual_network_I_vn --> ietf_vn_I_vn_policy_grouping : uses 
ietf_vn --> ietf_vn_I_vn_policy_grouping : uses 
ietf_vn_I_virtual_network_I_vn-->"tet:te-node-id"ietf_network_I_networks_I_network_I_node: abstract-node
center footer
 <size:20> UML Generated : 2022-11-16 09:12 </size>
 endfooter 
@enduml 
